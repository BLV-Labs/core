syntax = "proto3";
package terra.gov.v2lunc1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

option go_package = "github.com/classic-terra/core/v3/custom/gov/types";

// Query defines the gRPC querier service for gov module
service Query {
  // Proposal queries proposal details based on ProposalID.
  rpc ProposalMinimalLUNCByUusd(QueryProposalRequest) returns (QueryMinimalDepositProposalResponse) {
    option (google.api.http).get = "/cosmos/gov/v1/proposals/minimal-deposits/{proposal_id}";
  }
}

// QueryProposalRequest is the request type for the Query/Proposal RPC method.
message QueryProposalRequest {
  // proposal_id defines the unique id of the proposal.
  uint64 proposal_id = 1;
}

// QueryVoteRequest is the request type for the Query/Vote RPC method.
message QueryMinimalDepositProposalResponse {
  // proposal_id defines the unique id of the proposal.
    repeated cosmos.base.v1beta1.Coin minimal_deposits = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}