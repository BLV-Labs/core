syntax = "proto3";
package terra.gov.v2lunc1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";

option go_package = "github.com/classic-terra/core/v3/custom/gov/types";

// Msg defines the gov Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // SubmitProposal defines a method to create new proposal given the messages.
  rpc SubmitProposal(MsgSubmitProposal) returns (MsgSubmitProposalResponse);

   // Deposit defines a method to add deposit on a specific proposal.
  rpc Deposit(MsgDeposit) returns (MsgDepositResponse);
}

message MsgSubmitProposal {
  option (cosmos.msg.v1.signer) = "proposer";
  option (amino.name)           = "cosmos-sdk/v1/MsgSubmitProposal";

  // messages are the arbitrary messages to be executed if proposal passes.
  repeated google.protobuf.Any messages             = 1;

  // initial_deposit is the deposit value that must be paid at proposal submission.
  repeated cosmos.base.v1beta1.Coin initial_deposit = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
  
  // proposer is the account address of the proposer.
  string                            proposer        = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // metadata is any arbitrary metadata attached to the proposal.
  string metadata = 4;

  // title is the title of the proposal.
  //
  // Since: cosmos-sdk 0.47
  string title = 5;

  // summary is the summary of the proposal
  //
  // Since: cosmos-sdk 0.47
  string summary = 6;
}

// MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
message MsgSubmitProposalResponse {
  // proposal_id defines the unique id of the proposal.
  uint64 proposal_id = 1;
}

// MsgDeposit defines a message to submit a deposit to an existing proposal.
message MsgDeposit {
  option (cosmos.msg.v1.signer) = "depositor";
  option (amino.name)           = "cosmos-sdk/v1/MsgDeposit";

  // proposal_id defines the unique id of the proposal.
  uint64   proposal_id                     = 1 [(gogoproto.jsontag) = "proposal_id", (amino.dont_omitempty) = true];
  
  // depositor defines the deposit addresses from the proposals.
  string   depositor                       = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // amount to be deposited by depositor.
  repeated cosmos.base.v1beta1.Coin amount = 3 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgDepositResponse defines the Msg/Deposit response type.
message MsgDepositResponse {}